<?xml version="1.0"?>
<launch>

  <!--
  <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="0 0 0 0 0 0 world arm_1_joint 20"/>
  <include file="/opt/ros/noetic/share/urdf_tutorial/launch/display.launch" />

  <param name="robot_description" textfile="/home/abrown472/catkin_ws/src/robotic_arm/urdf/updated.urdf" />
  
 
  <rosparam command="load" file="$(find robotic_arm)/config/arm_control.yaml" />
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
  <rosparam command="load" file="$(find robotic_arm)/config/joint_state_controller.yaml" />
  
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
  -->

  <rosparam command="load" file="$(find robotic_arm)/config/solver_params.yaml" />
  <rosparam command="load" file="$(find robotic_arm)/config/target_coordinates.yaml"/>

  <node name="IK_server" pkg="robotic_arm" type="IK_service.py" output="screen"/>
  
  <param name="robot_description" textfile="$(find robotic_arm)/urdf/updated.urdf" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 0 -y 0 -z 0 -model robot_arm_new" />
  <rosparam command="load" file="$(find robotic_arm)/config/arm_control.yaml" />

  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
  <rosparam command="load" file="$(find robotic_arm)/config/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
  
</launch>